{"ast":null,"code":"import { globalConstant } from '../shared/global-constant';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./snackbar.service\";\nexport let RouteGuardService = /*#__PURE__*/(() => {\n  var _class;\n  class RouteGuardService {\n    constructor(auth, router, snackBar) {\n      this.auth = auth;\n      this.router = router;\n      this.snackBar = snackBar;\n    }\n    canActivate(route) {\n      let expectedRoleArray = route.data;\n      expectedRoleArray = expectedRoleArray.expectedRole;\n      const token = localStorage.getItem('token');\n      let tokenPayload;\n      try {\n        tokenPayload = jwt_decode(token);\n      } catch (error) {\n        localStorage.clear();\n        this.router.navigate(['/']);\n      }\n      let checkRole = false;\n      for (let role of expectedRoleArray) {\n        if (role === tokenPayload.role) {\n          checkRole = true;\n        }\n      }\n      if (tokenPayload.role === 'user' || tokenPayload.role === 'admin') {\n        if (this.auth.isAuthenticated() && checkRole) {\n          return true;\n        }\n        this.snackBar.openSnackBar(globalConstant.generelError, globalConstant.error);\n        this.router.navigate(['/']);\n        return false;\n      } else {\n        this.router.navigate(['/']);\n        localStorage.clear();\n        return false;\n      }\n    }\n  }\n  _class = RouteGuardService;\n  _class.ɵfac = function RouteGuardService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.SnackbarService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return RouteGuardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}