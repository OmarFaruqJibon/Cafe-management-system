{"ast":null,"code":"import { UntypedFormGroup, Validators } from '@angular/forms';\nimport { globalConstant } from '../shared/global-constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"../services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nfunction LoginComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 8);\n    i0.ɵɵtemplate(2, LoginComponent_mat_error_11_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls.email.errors.pattern);\n  }\n}\nfunction LoginComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls.password.errors);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _class;\n  class LoginComponent {\n    constructor(fb, router, userService, snackbar, dialogRef) {\n      this.fb = fb;\n      this.router = router;\n      this.userService = userService;\n      this.snackbar = snackbar;\n      this.dialogRef = dialogRef;\n      this.loginForm = UntypedFormGroup;\n    }\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.pattern(globalConstant.emailError)]],\n        password: ['', [Validators.required]]\n      });\n    }\n    handleSubmit() {\n      const formData = this.loginForm.value;\n      const data = {\n        email: formData.email,\n        password: formData.password\n      };\n      console.log(data);\n      this.userService.login(data).subscribe(resp => {\n        this.dialogRef.close();\n        this.responseMessage = resp?.message;\n        localStorage.setItem('token', resp?.token);\n        this.snackbar.openSnackBar(this.responseMessage, '');\n        this.router.navigate(['/cafe/dashboard']);\n      }, error => {\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = globalConstant.generelError;\n        }\n        this.snackbar.openSnackBar(this.responseMessage, globalConstant.error);\n      });\n    }\n  }\n  _class = LoginComponent;\n  _class.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialogRef));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"mat-form-field\", 6)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 3, 2, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 6)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 1, \"mat-error\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"mat-dialog-actions\", 10)(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵtext(19, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵtext(21, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.email.touched && ctx.loginForm.controls.email.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls.password.touched && ctx.loginForm.controls.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.loginForm.valid && ctx.loginForm.dirty));\n      }\n    },\n    styles: [\".title[_ngcontent-%COMP%]{text-align:center!important}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}